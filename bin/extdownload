#!/usr/bin/env node

// This helper downloads the proper version of PhantomJS for the current
// OS and architecture.
require("coffee-script")
fs = require("fs")
path = require("path")
unzip = require("unzip")
rimraf = require("rimraf")
request = require("request")
platform = require("../lib/platform")

var extract = function(url, finalPath, execPath) {

  // Prepare a clean download directory.
  var tempFinalPath = finalPath + "." + (+new Date())
  fs.mkdirSync(tempFinalPath)

  // Download and unzip into that directory.
  console.info("downloading", url)
  var downloadStream = request(url)
  var directoryStream = unzip.Extract({path: tempFinalPath})
  downloadStream.pipe(directoryStream)
  directoryStream.on("close", function() {
    var subDirs = fs.readdirSync(tempFinalPath)
    var subPath = path.resolve(tempFinalPath, subDirs[0])

    // Rename the download to the desired final path.
    console.info("download complete, renaming", subPath, "to", finalPath)
    rimraf.sync(finalPath)
    fs.renameSync(subPath, finalPath)
    rimraf.sync(tempFinalPath)
    fs.chmodSync(execPath, 0755)
    console.info("unzipped to", finalPath)

  })
}

var downloaders = {

  macosx: function() {
    extract(
      "http://phantomjs.googlecode.com/files/phantomjs-1.6.1-macosx-static.zip",
      path.resolve(__dirname, "../ext/macosx"),
      path.resolve(__dirname, "../ext/macosx/bin/phantomjs")
    )
  },

  windows: function() {
    extract(
      "http://phantomjs.googlecode.com/files/phantomjs-1.6.1-win32-static.zip",
      path.resolve(__dirname, "../ext/windows"),
      path.resolve(__dirname, "../ext/windows/phantomjs.exe")
    )
  },

  // TODO: implement untarring for Linux builds
  // linux32: function() {
  //   extract(
  //     "http://phantomjs.googlecode.com/files/phantomjs-1.6.1-linux-i686-dynamic.tar.bz2",
  //     path.resolve(__dirname, "../ext/linux32")
  //   )
  // },
  // linux64: function() {
  //   extract(
  //     "http://phantomjs.googlecode.com/files/phantomjs-1.6.1-linux-x86_64-dynamic.tar.bz2",
  //     path.resolve(__dirname, "../ext/linux64")
  //   )
  // }

}

var download = downloaders[platform.get()]
if (download) {
  download()
} else {
  console.error("unable to determine the right version of PhantomJS to download")
  process.exit(2)
}
